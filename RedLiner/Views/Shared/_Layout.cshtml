<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    
        <title>RedLiner</title>
   
    @Styles.Render("~/Content/css")
    @Scripts.Render("~/bundles/modernizr")
    <script src="https://js.arcgis.com/3.27/"></script>
    <script>
        var toolbar, symbol, geomTask;
       

        require([
            "esri/map",
            "esri/dijit/Search",
            "esri/dijit/Scalebar",
            "esri/toolbars/draw",
            "esri/graphic",
            "esri/symbols/SimpleMarkerSymbol",
            "esri/symbols/SimpleLineSymbol",
            "esri/symbols/SimpleFillSymbol",
            "dojo/parser",
            "dijit/registry",
            "esri/dijit/Measurement",
            "esri/dijit/BasemapGallery",
            "esri/arcgis/utils",
            "esri/dijit/OverviewMap",
            "esri/dijit/Print",
            "esri/dijit/LocateButton",
            "dijit/layout/BorderContainer",
            "dijit/layout/ContentPane",
            "dijit/TitlePane",
            "dijit/form/Button",
            "dijit/WidgetSet",
            "dojo/domReady!"
        ], function (Map, Search, Scalebar, Draw, Graphic, SimpleMarkerSymbol, SimpleLineSymbol, SimpleFillSymbol, parser, registry, Measurement, BasemapGallery, arcgisUtils, OverviewMap, Print, LocateButton) {
            parser.parse();
           
             var map = new Map("map", {
                basemap: "satellite",  
                center: [-122.45, 37.75], 
                zoom: 13
            });
            var overviewMapDijit = new OverviewMap({
                map: map,
                visible: true
            });
            overviewMapDijit.startup();
            var printer = new Print({
                map: map,
                url: "https://sampleserver6.arcgisonline.com/arcgis/rest/services/Utilities/PrintingTools/GPServer/Export%20Web%20Map%20Task"
            }, "printer");
            printer.startup();
            var basemapGallery = new BasemapGallery({
                showArcGISBasemaps: true,
                map: map
            }, "basemapGallery");
            basemapGallery.startup();

            basemapGallery.on("error", function (msg) {
                console.log("basemap gallery error:  ", msg);
            });
              var search = new Search({
                    map: map
              }, "search");
            search.startup();
            var scalebar = new Scalebar({
                map: map,
                scalebarUnit: "english",
                attachTo: "bottom-center"
            });

            map.on("load", createToolbar);

      
            registry.forEach(function (d) {
              
                if (d.declaredClass === "dijit.form.Button") {
                    d.on("click", activateTool);
                }
            });

            function activateTool() {
                var tool = this.label.toUpperCase().replace(/ /g, "_");
                toolbar.activate(Draw[tool]);
                map.hideZoomSlider();
            }

            function createToolbar(themap) {
                toolbar = new Draw(map);
                toolbar.on("draw-end", addToMap);
            }

            function addToMap(evt) {
                var symbol;
                toolbar.deactivate();
                map.showZoomSlider();
                switch (evt.geometry.type) {
                    case "point":
                    case "multipoint":
                        symbol = new SimpleMarkerSymbol();
                        break;
                    case "polyline":
                        symbol = new SimpleLineSymbol();
                        break;
                    default:
                        symbol = new SimpleFillSymbol();
                        break;
                }
                var graphic = new Graphic(evt.geometry, symbol);
                map.graphics.add(graphic);
            }

            var measurement = new Measurement({ map: map }, "measurement");
            measurement.startup();
            geoLocate = new LocateButton({
                map: map
            }, "LocateButton");
            geoLocate.startup();       
        });
    </script>
</head>
<body>
     @RenderBody()
       @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/bootstrap")
    @RenderSection("scripts", required: false)
</body>
</html>
